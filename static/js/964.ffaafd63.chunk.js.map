{"version":3,"file":"static/js/964.ffaafd63.chunk.js","mappings":"0LACA,EAAuB,8B,SCoBvB,EAnBwB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,WAAMD,EAAME,IACdC,MAAO,CAAEC,KAAMP,GACfQ,UAAWC,EAHb,SAKGN,EAAMO,SANFP,EAAME,GADA,KAatB,C,uKClBD,GAAgB,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,OAAS,4B,SC8B7H,EA5BmB,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SAOpB,OACE,SAAC,KAAD,CAAQC,cAPW,CAAEC,MAAO,IAOSF,SALlB,SAACG,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,EAASG,EAAOD,MAAMG,QACtBD,GACD,EAEC,UACE,UAAC,KAAD,CAAMP,UAAWC,EAAAA,KAAUQ,aAAa,MAAxC,WACE,kBAAOT,UAAWC,EAAAA,MAAWS,QAAQ,UAArC,UACE,SAAC,KAAD,CACEV,UAAWC,EAAAA,MACXU,KAAK,OACLF,aAAa,MACbG,WAAS,EACTC,YAAY,gBACZC,KAAK,aAGT,mBAAQH,KAAK,SAASX,UAAWC,EAAAA,OAAjC,UACE,iBAAMD,UAAWC,EAAAA,YAAjB,SAAkC,iBAK3C,EC5BD,EAAuB,qBCkEvB,EA1De,WAAO,IAAD,EACnB,GAAwCc,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAe,UAAGR,EAAaS,IAAI,gBAApB,QAAgC,GA8BrD,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACEP,EAAU,IACVE,GAAW,GACXE,GAAS,GAHX,mBAK2BI,EAAAA,EAAAA,IAAqBH,GALhD,UAMoC,KAD1BI,EALV,QAMiBC,QAAQC,OANzB,yCAOaC,EAAAA,GAAAA,MAAY,0CAPzB,OASIZ,EAAUS,EAASC,SATvB,kDAWIN,GAAS,GAXb,yBAaIF,GAAW,GAbf,8EAJc,sBACU,KAApBG,GADU,mCAoBdQ,EACD,GAAE,CAACR,KAGF,iCACE,SAAC,EAAD,CAAYrB,SA9BK,SAAA8B,GAEnBhB,EAD6B,KAAVgB,EAAe,CAAE5B,MAAO4B,GAAU,CAAC,EAEvD,IA4BIb,IACC,SAAC,KAAD,CACEc,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAGzD,eAAIvC,UAAWC,EAAf,SACqB,IAAlBV,EAAOuC,SAAgB,SAACU,EAAA,EAAD,CAAiBjD,OAAQA,MAElD+B,IAAS,0BAAM,2BAChB,SAAC,KAAD,CAASmB,SAAS,gBAGvB,C","sources":["webpack://react-homework-template/./src/components/MoviesListItems/MoviesListItems.module.css?4079","components/MoviesListItems/MoviesListItems.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MoviesListItems_link__kD6ZF\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesListItems.module.css';\nconst MoviesListItems = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/${movie.id}`}\n            state={{ from: location }}\n            className={css.link}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesListItems;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"label\":\"SearchForm_label__GvSVH\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import { Field, Formik, Form } from 'formik';\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const initialValue = { query: '' };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onSubmit(values.query.trim());\n    resetForm();\n  };\n  return (\n    <Formik initialValues={initialValue} onSubmit={handleSubmit}>\n      <Form className={css.form} autoComplete=\"off\">\n        <label className={css.label} htmlFor=\"keyword\">\n          <Field\n            className={css.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"query\"\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          <span className={css.buttonLabel}>Search</span>\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__hqYjd\"};","import toast, { Toaster } from 'react-hot-toast';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { searchMovieByKeyword } from 'api';\nimport MoviesListItems from 'components/MoviesListItems/MoviesListItems';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const getQueryFromUrl = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (getQueryFromUrl === '') {\n      return;\n    }\n    async function searchMovie() {\n      setMovies([]);\n      setLoading(true);\n      setError(false);\n      try {\n        const response = await searchMovieByKeyword(getQueryFromUrl);\n        if (response.results.length === 0) {\n          return toast.error('Sorry, there are no movies. Try again');\n        }\n        setMovies(response.results);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    searchMovie();\n  }, [getQueryFromUrl]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      <ul className={css.list}>\n        {movies.length !== 0 && <MoviesListItems movies={movies} />}\n      </ul>\n      {error && <span>Something went wrong!</span>}\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","className","css","title","onSubmit","initialValues","query","values","resetForm","trim","autoComplete","htmlFor","type","autoFocus","placeholder","name","useSearchParams","searchParams","setSearchParams","useState","setMovies","loading","setLoading","error","setError","getQueryFromUrl","get","useEffect","searchMovieByKeyword","response","results","length","toast","searchMovie","value","visible","height","width","ariaLabel","wrapperClass","colors","MoviesListItems","position"],"sourceRoot":""}